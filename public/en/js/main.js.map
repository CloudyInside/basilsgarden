{"version":3,"sources":["file:///C:/Hugo/basilsgarden/assets/js/main.js"],"sourcesContent":["// Script para ocultar o mostrar divs en función de donde se clicka\r\n\r\ndocument.addEventListener('DOMContentLoaded', () =\u003e {\r\n\tconst imgs = document.querySelectorAll('.gallery img');\r\n\tlet currentIndex = 0;\r\n\r\n\t// Modal con imágenes a pantalla completa\r\n\tconst fullScreen = document.getElementById('fullscreen');\r\n\tconst leftArrow = document.createElement('div');\r\n\tconst rightArrow = document.createElement('div');\r\n\r\n\tleftArrow.textContent = ' ';\r\n\trightArrow.textContent = ' ';\r\n\tleftArrow.className = 'arrow left-arrow';\r\n\trightArrow.className = 'arrow right-arrow';\r\n\r\n\tfullScreen.appendChild(leftArrow);\r\n\tfullScreen.appendChild(rightArrow);\r\n\r\n\tfunction updateFullScreenImage(index) {\r\n\t\tif (index \u003c 0) {\r\n\t\t\tcurrentIndex = imgs.length - 1;\r\n\t\t} else if (index \u003e= imgs.length) {\r\n\t\t\tcurrentIndex = 0;\r\n\t\t} else {\r\n\t\t\tcurrentIndex = index;\r\n\t\t}\r\n\t\tconsole.log(imgs);\r\n\t\tfullScreen.style.backgroundImage = `url('${imgs[currentIndex].getAttribute('data-full')}')`;\r\n\t\tfullScreen.style.display = 'block';\r\n\t}\r\n\r\n\timgs.forEach((img, index) =\u003e {\r\n\t\timg.addEventListener('click', function (event) {\r\n\t\t\tevent.stopPropagation();\r\n\t\t\tupdateFullScreenImage(index);\r\n\t\t});\r\n\t});\r\n\r\n\tleftArrow.addEventListener('click', function (event) {\r\n\t\tevent.stopPropagation();\r\n\t\tupdateFullScreenImage(currentIndex - 1);\r\n\t});\r\n\r\n\trightArrow.addEventListener('click', function (event) {\r\n\t\tevent.stopPropagation();\r\n\t\tupdateFullScreenImage(currentIndex + 1);\r\n\t});\r\n\r\n\t// Cierra el modo de pantalla completa al hacer clic en el contenedor\r\n\tfullScreen.addEventListener('click', function (event) {\r\n\t\tevent.stopPropagation();\r\n\t\tthis.style.display = 'none';\r\n\t});\r\n});\r\n\r\nfunction setGridHeight(grid) {\r\n\tconst firstImg = grid.querySelector('img');\r\n\tif (!firstImg) return;\r\n\r\n\t// Force browser to calculate actual image height\r\n\tconst imgHeight = firstImg.getBoundingClientRect().height;\r\n\tconst gap = parseFloat(getComputedStyle(grid).gap) || 0;\r\n\tconst rowHeight = imgHeight + gap;\r\n\r\n\tgrid.style.maxHeight = `${rowHeight}px`;\r\n\tconsole.log('Set grid height:', rowHeight, 'px');\r\n}\r\n\r\nfunction setGridHeight(grid) {\r\n\tconst firstImg = grid.querySelector('img');\r\n\tif (!firstImg) return;\r\n\r\n\tconst imgHeight = firstImg.getBoundingClientRect().height;\r\n\tconst gap = parseFloat(getComputedStyle(grid).gap) || 0;\r\n\tgrid.style.maxHeight = `${imgHeight + gap}px`;\r\n}\r\n\r\nfunction initGrid(grid) {\r\n\tconst images = grid.querySelectorAll('img');\r\n\r\n\t// If no images or all images already loaded, set height immediately\r\n\tif (images.length === 0 || [...images].every((img) =\u003e img.complete)) {\r\n\t\tsetGridHeight(grid);\r\n\t\treturn;\r\n\t}\r\n\r\n\t// Otherwise wait for all images to load\r\n\timages.forEach((img) =\u003e {\r\n\t\tif (!img.complete) {\r\n\t\t\timg.addEventListener('load', () =\u003e {\r\n\t\t\t\tif ([...images].every((i) =\u003e i.complete)) {\r\n\t\t\t\t\tsetGridHeight(grid);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t});\r\n}\r\n\r\n// Initialize all current grids and watch for new ones\r\nconst observer = new MutationObserver((mutations) =\u003e {\r\n\tmutations.forEach((mutation) =\u003e {\r\n\t\tmutation.addedNodes.forEach((node) =\u003e {\r\n\t\t\tif (node.nodeType === 1) {\r\n\t\t\t\t// Element node\r\n\t\t\t\tif (node.classList.contains('favs')) initGrid(node);\r\n\t\t\t\tnode.querySelectorAll?.('.favs').forEach(initGrid);\r\n\t\t\t}\r\n\t\t});\r\n\t});\r\n});\r\n\r\n// Start observing the document for changes\r\nobserver.observe(document.body, {\r\n\tchildList: true,\r\n\tsubtree: true,\r\n});\r\n\r\n// Also observe for resize events on existing grids\r\nconst resizeObserver = new ResizeObserver((entries) =\u003e {\r\n\tentries.forEach((entry) =\u003e initGrid(entry.target));\r\n});\r\n\r\n// Initialize existing grids and set up observers\r\ndocument.querySelectorAll('.favs').forEach((grid) =\u003e {\r\n\tinitGrid(grid);\r\n\tresizeObserver.observe(grid);\r\n});\r\n"],"mappings":"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","names":[]}